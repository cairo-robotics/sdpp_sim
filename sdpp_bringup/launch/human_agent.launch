<launch>
    <arg name="x_pos" default="1.0"/>
    <arg name="y_pos" default="1.0"/>
    <arg name="z_pos" default="0.0"/>
    <arg name="world" default="$(find sdpp_gazebo)/worlds/sdpp_base.world"/>
    <!--arg name="launch_gazebo" default="true" /-->
    <!--arg name="map_file" default="$(find sdpp_gazebo)/config/maps/block_room.yaml" /-->
    <!--arg name="open_rviz" default="false"/-->
    <arg name="move_forward_only" default="true"/>
    <arg name="multi_bot" default="human_0" />


    <node pkg="tf" type="static_transform_publisher" name="map_to_$(arg multi_bot)_odom" args="0 0 0 0 0 0 $(arg multi_bot)/odom map 100" />


    <!-- load robot description -->
    <param name="$(arg multi_bot)/robot_description" command="$(find xacro)/xacro --inorder $(find sdpp_human_description)/urdf/turtlebot3_waffle_pi.urdf.xacro" />

    <!-- spawn urdf model  change spawn name-->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf_$(arg multi_bot)"  args="-urdf -model $(arg multi_bot) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param $(arg multi_bot)/robot_description" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher_$(arg multi_bot)">
        <param name="publish_frequency" type="double" value="50.0" />
        <!--param name="tf_prefix" value="$(arg multi_bot)"/-->
        <!--remap from="robot_description" to="$(arg multi_bot)/robot_description"/-->
    </node>


    <!-- move base -->
    <!-- Arguments -->
    <arg name="cmd_vel_topic" default="$(arg multi_bot)/cmd_vel" />
    <arg name="odom_topic" default="$(arg multi_bot)/odom" />

    <group ns="$(arg multi_bot)">
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
            <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
            <param name="global_costmap/robot_base_frame" value="testing_bs"/>

            <rosparam file="$(find sdpp_bringup)/param/human/costmap_common_params.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find sdpp_bringup)/param/human/costmap_common_params.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find sdpp_bringup)/param/human/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find sdpp_bringup)/param/human/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find sdpp_bringup)/param/human/move_base_params.yaml" command="load" />
            <rosparam file="$(find sdpp_bringup)/param/human/dwa_local_planner_params.yaml" command="load" />
            <remap from="/$(arg multi_bot)/map" to="/map"/>

            <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
            <param name="global_costmap/robot_base_frame" value="testing_bs" if="true"/>


            <param name="/$(arg multi_bot)/move_base/local_costmap/robot_base_frame" type="str" value="$(arg multi_bot)/base_link" />
            <param name="/$(arg multi_bot)/move_base/global_costmap/robot_base_frame" type="str" value="$(arg multi_bot)/base_link" />
        </node>
    </group>
</launch>